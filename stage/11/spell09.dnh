#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["St1 Sp3"]
#Text["Third spell!"]
#Player["./../../player/player0.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../player/shotc.dnh"
let id = 54;
let level = 10;
#include "./../spell_header.dnh"
#include "./render_boss.dnh"
#include "./bossfunc.dnh"

let height = GetStgFrameHeight;
let width = GetStgFrameWidth;

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(12000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(120);
	}
	case (EV_REQUEST_IS_DURABLE_SPELL) {
		SetScriptResult(true);
	}
	case (EV_REQUEST_SPELL_SCORE) {
		SetScriptResult(spellBonus);
	}
}

@Finalize {}

task TWork {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty - 5;
	// if (d) {TWorkOD;}
	let p = 1 / 300 + d / 1200;
	let speed = 1 + 0.1 * d;
	let period = 400 / (1 + 0.15 * d);
	while (!isDead) {
		
		yield;
	}
}

task TWorkOD {
	let SPEED = 3;
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let interval = 16;
	let ih = height / interval;
	let iw = width / interval;
	let period = 300;
	function redBullet(x, y) {
		CreateShotA1(x, y, SPEED, getAngleToXY(GetPlayerObjectID, x, y) + 180, DS_BALL_M_A_RED, 0);
	}
	function orangeBullet(x, y) {
		let direction = 0;
		if (x == width) {direction = 180;}
		else if (y == 0) {direction = 90;}
		else if (y == height) {direction = 270;}
		CreateShotA1(x, y, SPEED, direction, DS_BALL_M_A_ORANGE, 0);
		CreateShotA1(x, y, SPEED * 0.6, direction, DS_BALL_M_A_ORANGE, 0);
	}
	function greenBullet(x, y) {
		let direction = 0;
		if (x == width) {direction = 180;}
		else if (y == 0) {direction = 90;}
		else if (y == height) {direction = 270;}
		CreateShotA1(x, y, SPEED, direction + 20, DS_BALL_M_A_GREEN, 0);
		CreateShotA1(x, y, SPEED, direction - 20, DS_BALL_M_A_GREEN, 0);
	}
	function shoot(x, y, n) {
		alternative (n)
		case (0) {redBullet(x, y);}
		case (1) {orangeBullet(x, y);}
		case (2) {greenBullet(x, y);}
	}
	while (!isDead) {
		let n = randIntH(0, 2);
		ascent (i in 0 .. iw) {
			shoot(i * interval, 0, n);
			shoot(i * interval, height, n);
		}
		ascent (i in 0 .. ih) {
			shoot(0, i * interval, n);
			shoot(width, i * interval, n);
		}
		wait(period);
		period *= 0.99;
	}
}