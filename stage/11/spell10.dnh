#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["St1 Sp3"]
#Text["Third spell!"]
#Player["./../../player/player0.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../player/shotc.dnh"
let id = 65;
let level = 11;
#include "./../spell_header.dnh"
#include "./render_boss.dnh"
#include "./bossfunc.dnh"

let height = GetStgFrameHeight;
let width = GetStgFrameWidth;

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(30000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(200);
	}
	case (EV_REQUEST_SPELL_SCORE) {
		SetScriptResult(spellBonus);
	}
}

@Finalize {}

function hp {return min(ObjEnemy_GetInfo(objBoss, INFO_LIFE), ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID, INFO_TIMERF) * 2.5);}

task TWork {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty - 5;
	part1;
	let period = 80 - 8 * d;
	let t = rand(0, 360);
	let cl = 0;
	while (!isDead) {
		let u = 0;
		loop (10) {
			let r = 70 * polygon(6, u);
			loop (6) {
				CreateShotA1(ObjMove_GetX(objBoss) + r * cos(t), ObjMove_GetY(objBoss) + r * sin(t), r * 0.04, t, DS_STAR_S_RED + cl, 30);
				CreateShotA1(ObjMove_GetX(objBoss) + r * cos(t), ObjMove_GetY(objBoss) + r * sin(t), r * 0.04, 30 + t, DS_STAR_S_RED + cl, 30);
				t += 60;
			}
			t += 6;
			u += 6;
			cl = (cl + 1) % 8;
			shotSound;
		}
		wait(period);
	}
}

let explosion = false;

task starTask(shot) {
	let ways = getDifficulty - 1;
	while (!explosion) {yield;}
	if (!Obj_IsDeleted(shot)) {
		let a = rand(0, 360);
		loop (ways) {
			CreateShotOA1(shot, 0.4 * ObjMove_GetSpeed(shot), a, DS_STAR_S_GREEN, 0);
			a += 360 / ways;
		}
		Obj_Delete(shot);
	}
}

task part1 {
	while (hp > 25000) {yield;}
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty - 5;
	part2;
	while (!isDead) {
		loop (24) {
			if (isDead) {return;}
			let star = CreateShotOA1(objBoss, rand(1, 3.5), rand(0, 360), DS_STAR_M_GREEN, 0);
			starTask(star);
			wait(5);
		}
		explosion = true;
		wait(120);
		explosion = false;
	}
}

task part2 {
	while (hp > 20000) {yield;}
	part3;
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let l = 160;
	let r = 100;
	while (!isDead) {
		let t = rand(60, 120);
		let c = cos(t);
		let s = sin(t);
		let y = rand(0, height / 4);
		let x = rand(0, width - l * s);
		let x0 = x;
		let y0 = y;
		let cl = randIntH(0, 7);
		loop {
			let x2 = x + l * s;
			let y2 = y - l * c;
			if ((x < 0 || x > width || y > height) &&
				(x2 < 0 || x2 > width || y2 > height)) {
				break;
			}
			ObjStLaser_SetSource(CreateStraightLaserA1(x, y, t - 90, l, 24, 120, DS_BEAM_RED + cl, 60), false);
			cl = (cl + 1) % 7;
			x += r * c;
			y += r * s;
		}
		ObjStLaser_SetSource(CreateStraightLaserA1(x0 - r * c, y0 - r * s, t, 600, 24, 120, DS_BEAM_WHITE, 60), false);
		ObjStLaser_SetSource(CreateStraightLaserA1(x0 - r * c + l * s, y0 - r * s - l * c, t, 600, 24, 120, DS_BEAM_WHITE, 60), false);
		wait(210);
	}
}

task part3 {
	while (hp > 15000) {yield;}
	let d = getDifficulty;
	part4;
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let t = rand(0, 360);
	let cl = randIntH(0, 8);
	while (!isDead) {
		loop (5) {
			loop (12) {
				CreateShotA1(GetPlayerX + cx * cos(t), GetPlayerY + cx * sin(t), 1, t, DS_BILL_RED + cl, 60);
				CreateShotA1(GetPlayerX + cx * cos(t), GetPlayerY + cx * sin(t), 1, 180 + t, DS_BILL_RED + cl, 60);
				t += 3;
			}
			cl = (cl + 1) % 8;
			t += 36;
		}
		t += rand(0, 18) + rand(0, 18);
		wait(240);
	}
}

let reverse = false;

task spiral(x, y) {
	let a = getAngleToXY(GetPlayerObjectID, x, y) + 180;
	let d = getDifficulty;
	let interval = 87 - 6.7 * d;
	let s = randomSign;
	let speed = 1.2 + 0.03 * d;
	let cl = randIntH(0, 8);
	while (!isDead) {
		CreateShotA1(x, y, speed, a, DS_RICE_S_RED + cl, 30);
		CreateShotA1(x, y, speed, 0.5 * a, DS_RICE_S_RED + cl, 30);
		if (reverse) {
			if (d >= 2) {CreateStraightLaserA1(x, y, getAngleToXY(GetPlayerObjectID, x, y) + 180, 600, 24, 30, DS_BEAM_RED + cl, 90);}
			s = randomSign;
		}
		a += interval * s;
		cl = (cl + 1) % 8;
		wait(interval / 2);
	}
}

task spiral2(x, y) {
	spiral(x, y);
	spiral(GetStgFrameWidth - x, y);
}

task part4 {
	while (hp > 10000) {yield;}
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty;
	part5;
	let interval = 29 - 2.9 * d;
	spiral2(100, 50);
	spiral2(50, 150);
	spiral2(100, 200);
	spiral(cx, 250);
	spiral(cx, 75);
	while (!isDead) {
		reverse = true;
		wait(interval / 2);
		reverse = false;
		wait(240);
	}
}

task part5 {
	while (hp > 5000) {yield;}
	let d = getDifficulty;
	let angleDensity = 12 + 2 * d;
	let ad = 24 + 4 * d;
	let deviation = 30 + 5 * d;
	let ways = 3 + d;
	task bulletTask(shot) {
		wait(100);
		if (!Obj_IsDeleted(shot)) {
			let a = 90;
			loop (ways) {
				CreateShotOA1(shot, 0.5, a, DS_BALL_SS_RED + randIntH(0, 8), 0);
				a += 360 / ways;
			}
			Obj_Delete(shot);
		}
	}
	while (!isDead) {
		let a = rand(0, 360);
		let b = 0;
		let cl = randIntH(0, 8);
		loop (ad) {
			let r = astroid(b, 9);
			let shot = CreateShotOA1(objBoss, 3 * r, a + b, DS_BALL_S_RED + cl, 0);
			bulletTask(shot);
			shot = CreateShotOA1(objBoss, 1.5 * r, a + b + 45, DS_BALL_S_RED + cl, 0);
			bulletTask(shot);
			b += 360 / ad;
			cl = (cl + 1) % 8;
		}
		wait(240);
	}
}