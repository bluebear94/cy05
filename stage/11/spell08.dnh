#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["St1 Sp3"]
#Text["Third spell!"]
#Player["./../../player/player0.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../player/shotc.dnh"
let id = 53;
let level = 10;
#include "./../spell_header.dnh"
#include "./render_boss.dnh"
#include "./bossfunc.dnh"

let height = GetStgFrameHeight;
let width = GetStgFrameWidth;

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(12000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(100);
	}
	case (EV_REQUEST_SPELL_SCORE) {
		SetScriptResult(spellBonus);
	}
}

@Finalize {}

task part1 {
	let d = getDifficulty;
	let angleDensity = 12 + 2 * d;
	let ad = 24 + 4 * d;
	let deviation = 30 + 5 * d;
	let ways = 3 + d;
	task bulletTask(shot) {
		wait(100);
		if (!Obj_IsDeleted(shot)) {
			let a = 90;
			loop (ways) {
				CreateShotOA1(shot, 0.5, a, DS_BALL_SS_BLUE, 0);
				a += 360 / ways;
			}
			Obj_Delete(shot);
		}
	}
	while (!isDead) {
		let a = rand(0, 360);
		loop (6) {
			loop (angleDensity) {
				bulletTask(CreateShotOA1(objBoss, 1.2, a, DS_BALL_S_SKY, 0));
				a += 30 / angleDensity;
			}
			a += 30;
		}
		wait(140);
		if (isDead) {return;}
		loop (3) {
			a = rand(0, 360);
			let b = 0;
			loop (ad) {
				let r = astroid(b, 4);
				let shot = CreateShotOA1(objBoss, 3 * r, a + b, DS_BALL_S_SKY, 0);
				bulletTask(shot);
				shot = CreateShotOA1(objBoss, 1.5 * r, a + b + 45, DS_BALL_S_SKY, 0);
				bulletTask(shot);
				b += 360 / ad;
			}
			wait(140);
		}
		if (isDead) {return;}
		a = rand(0, 360);
		let s = randomSign;
		loop (angleDensity) {
			if (isDead) {return;}
			loop (8) {
				bulletTask(CreateShotOA1(objBoss, 2, a, DS_BALL_S_SKY, 0));
				a += 45;
			}
			a += s * deviation / angleDensity;
			wait(2);
		}
		wait(140 - 2 * angleDensity);
	}
}

task part2 {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let arrowInterval = 25;
	let arrowSpread = 3;
	let arrowSpan = arrowInterval * arrowSpread;
	let d = getDifficulty;
	let speed = 3 + 0.3 * d;
	let p = 1 / 240 + d / 1120;
	while (!isDead) {
		if (rand(0, 1) < p) {
			let x = rand(arrowSpan, width - arrowSpan);
			let s = randomSign;
			let y = cy * (1 + s);
			let angle = -90 * s;
			ascent (i in -arrowSpread .. arrowSpread + 1) {
				DelayLaser(x + i * arrowInterval, y - (y != 0), angle, 600, 24, 72, DS_BEAM_GREEN, 72);
				CreateShotA1(x + i * arrowInterval, y, speed, angle, DS_SCALE_A_GREEN, 24 + 10 * absolute(i));
			}
		}
		yield;
	}
}

task TWork {
	part1;
	part2;
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty;
	let p = 1 / 300 + d / 1200;
	let speed = 1 + 0.1 * d;
	let period = 400 / (1 + 0.15 * d);
	while (!isDead) {
		if (rand(0, 0.05) < p) {
			CreateShotOA1(objBoss, rand(0.5, 1.5), rand(0, 360), DS_BILL_RED + randIntH(0, 8), 0);
		}
		yield;
	}
}