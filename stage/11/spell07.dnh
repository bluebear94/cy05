#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["St1 Sp3"]
#Text["Third spell!"]
#Player["./../../player/player0.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../player/shotc.dnh"
let id = 62;
let level = 11;
#include "./../spell_header.dnh"
#include "./render_boss.dnh"

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(18000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(120);
	}
	case (EV_REQUEST_SPELL_SCORE) {
		SetScriptResult(spellBonus);
	}
}

@Finalize {}

task lasers {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	while (!isDead) {
		loop (8) {
			CreateStraightLaserA1(rand(0, width), rand(0, height / 3), rand(45, 135), 600, 24, 240, DS_BEAM_RED, 240);
		}
		wait(480);
	}
}

task wall(shot) {
	let width = GetStgFrameWidth;
	while (!Obj_IsDeleted(shot)) {
		let x = ObjMove_GetX(shot);
		let y = ObjMove_GetY(shot);
		let canHitTop = true;
		let angle = ObjMove_GetAngle(shot);
		if (x < 0) {
			ObjMove_SetAngle(shot, 180 - angle);
			return;
		}
		else if (x > width) {
			ObjMove_SetAngle(shot, 180 - angle);
			return;
		}
		else if (y < 0 && canHitTop) {
			ObjMove_SetAngle(shot, -angle);
			wait(5);
			canHitTop = false;
		}
		yield;
	}
}

task familiarTask(shot, t0) {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	ObjShot_SetSpellResist(shot, true);
	ObjShot_SetAutoDelete(shot, false);
	let t = t0;
	let px = ObjMove_GetX(shot);
	let py = ObjMove_GetY(shot);
	let r = 150;
	let dr = 1;
	let u = rand(0, 360);
	let c = 0;
	ObjMove_SetDestAtFrame(shot, cx + r * cos(t), cy + r * sin(t), 60);
	wait(60);
	while (!Obj_IsDeleted(shot)) {
		px = ObjMove_GetX(shot);
		py = ObjMove_GetY(shot);
		ObjMove_SetPosition(shot, cx + r * cos(t), cy + r * sin(t));
		let x = ObjMove_GetX(shot);
		let y = ObjMove_GetY(shot);
		let angle = atan2(y - py, x - px);
		if (x != px && c % 40 == 0) {
			CreateShotOA1(shot, 1.5, angle + 90, DS_STAR_S_GREEN, 30);
			CreateShotOA1(shot, 1.5, angle - 90, DS_STAR_S_GREEN, 30);
		}
		if (c % 30 == 0) {
			loop (4) {
				CreateShotOA1(shot, 1.5, u, DS_BALL_S_YELLOW, 0);
				u += 90;
			}
			u += 25.3;
		}
		t += 0.35;
		r += 0.5 * dr;
		c++;
		if (r == 300 || r == 90) {dr *= -1;}
		yield;
	}
}

task TWork {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty - 5;
	let cl = 0;
	let t = rand(0, 360);
	let period = 60 - 7 * d;
	let walls = 2 + d;
	ascent (i in 0 .. walls) {
		familiarTask(CreateShotA1(cx, cy, 0, 0, DS_BALL_L_GREEN, 0), i * 360 / walls);
	}
	lasers;
	while (!isDead) {
		loop (5) {
			ascent (i in 0 .. 10) {
				let tp = t + 3.5 * i;
				let shot = CreateShotA1(ObjMove_GetX(objBoss) + 30 * cos(tp), ObjMove_GetY(objBoss) + 30 * sin(tp), 1.5, t, DS_ICE_RED + cl, i);
				wall(shot);
			}
			t += 72;
			cl = (cl + 1) % 8;
		}
		t = rand(0, 360);
		wait(period);
	}
}

