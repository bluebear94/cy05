#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["St1 Sp3"]
#Text["Third spell!"]
#Player["./../../player/player0.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../player/shotc.dnh"
let id = 68;
let level = 12;
#include "./../spell_header.dnh"
#include "./render_boss.dnh"

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(7000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(90);
	}
	case (EV_REQUEST_SPELL_SCORE) {
		SetScriptResult(spellBonus);
	}
}

@Finalize {}

task spawnBullet(x, y) {
	let shot = CreateShotA1(x, y, 0, rand(0, 360), DS_ICE_GREEN, 60);
	ObjMove_AddPatternA2(shot, 90, 0, NO_CHANGE, 0.025, 0, 1.5);
	wait(150);
	while (!Obj_IsDeleted(shot)) {
		if (rand(0, 1) < 0.015) {Obj_Delete(shot);}
		yield;
	}
}

task spawnRow(x, y) {
	ascent (i in 0 .. 12) {
		spawnBullet(x + 8 * i, y);
		if (getDifficulty == 6) {
			spawnBullet(x + 8 * i + 4, y + 4);
		}
	}
}

task spawnColumn(x, inv) {
	let n = GetStgFrameHeight / 8;
	if (inv) {
		descent (i in 0 .. n) {
			if (isDead) {return;}
			spawnRow(x, 8 * i);
			yield;
		}
	}
	else {
		ascent (i in 0 .. n) {
			if (isDead) {return;}
			spawnRow(x, 8 * i);
			yield;
		}
	}
}

task antishotgun {
	let width = GetStgFrameWidth;
	while (!isDead) {
		if (GetObjectDistance(objBoss, GetPlayerObjectID) < 150) {
			loop (3) {
				if (isDead) {return;}
				spawnColumn(rand(0, width - 96), randIntH(0, 2));
				wait(60);
			}
		}
		yield;
	}
}

task TWork {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2 - 100;
	let d = getDifficulty - 5;
	let inv = false;
	antishotgun;
	while (!isDead) {
		spawnColumn(rand(0, width - 96), inv);
		inv = !inv;
		wait(210);
	}
}
