#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["St1 Sp3"]
#Text["Third spell!"]
#Player["./../../player/player0.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../player/shotc.dnh"
let id = 72;
let level = 12;
#include "./../spell_header.dnh"
#include "./render_boss.dnh"

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(15000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(120);
	}
	case (EV_REQUEST_SPELL_SCORE) {
		SetScriptResult(spellBonus);
	}
}

@Finalize {}

task water {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	while (!isDead) {
		let remh = ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID, INFO_CURRENT_LIFE) /
			ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID, INFO_CURRENT_LIFE_MAX);
		let remt = ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID, INFO_TIMERF) /
			ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID, INFO_ORGTIMERF);
		let rem = min(remh, remt);
		let h = 0.25 * height * (1 - rem);
		loop (max(1, 10 * (1 - rem))) {
			CreateShotA1(0, height - rand(0, h), rand(5, 10), 0, DS_ICE_SKY, 0);
			CreateShotA1(width, rand(0, h), rand(5, 10), 180, DS_ICE_SKY, 0);
		}
		yield;
	}
}

task TWork {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty - 5;
	let flip = false;
	let n = 6 + 2 * d;
	let period = 70 - 5 * d;
	let t = 0;
	water;
	while (!isDead) {
		let v = cy / n * rand(-1, 1);
		if (!flip || d) {
			ascent (i in 0 .. n + 1) {
				let shot = CreateShotA2(0, height * i / n + v, 1.5, 20 + 2 * sin(t) + rand(-2, 2), 0.01, 2.5, DS_KNIFE_KOUMA_ORANGE, 0);
				ObjMove_SetAngularVelocity(shot, 0.1);
				shot = CreateShotA2(0, height * i / n + v, 1.5, -20 - 2 * sin(t) + rand(-2, 2), 0.01, 2.5, DS_KNIFE_KOUMA_ORANGE, 0);
				ObjMove_SetAngularVelocity(shot, -0.1);
			}
		}
		if (flip || d) {
			ascent (i in 0 .. n + 1) {
				let shot = CreateShotA2(width, height * i / n + v, 1.5, 160 - 2 * sin(t) + rand(-2, 2), 0.01, 2.5, DS_KNIFE_KOUMA_YELLOW, 0);
				ObjMove_SetAngularVelocity(shot, -0.1);
				shot = CreateShotA2(width, height * i / n + v, 1.5, -160 + 2 * sin(t) + rand(-2, 2), 0.01, 2.5, DS_KNIFE_KOUMA_YELLOW, 0);
				ObjMove_SetAngularVelocity(shot, 0.1);
			}
		}
		shotSound;
		flip = !flip;
		wait(period);
		t += 23;
	}
}

