#TouhouDanmakufu[Stage]
#ScriptVersion[3]
#Title["St9"]
#Text["Extra stage!"]
#Background["./stg_back.dnh"]
#Player["./../../player/player0.dnh", "./../../player/player2.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../system/healthbar.dnh"
let stage = "12";
let done = false;
let dialogueData;
let dialogueData2;
let bgm = 24;
#include "./../stage_header.dnh"

let width = GetStgFrameWidth;
let height = GetStgFrameHeight;

task TStage {
	dialogueData = readDD("d11_3");
	dialogueData2 = readDD("d11_4");
	let d = getDifficulty;
	spawnEnemy48(width / 2, 150);
	spawnEnemy48(width / 2 - 50, 180);
	spawnEnemy48(width / 2 + 50, 180);
	waitForClearScreen;
	wait(120);
	showStageTitle([128, 255, 192]);
	loop (20) {
		spawnEnemy49(width, 120, 165);
		wait(15);
	}
	wait(90);
	loop (20) {
		spawnEnemy49(0, 120, 15);
		wait(15);
	}
	waitForClearScreen;
	spawnEnemy50(width - 80);
	spawnEnemy50(80);
	wait(180);
	spawnEnemy50(width - 110);
	spawnEnemy50(110);
	wait(300);
	spawnEnemy50(width - 150);
	spawnEnemy50(150);
	spawnEnemy51(width / 2);
	waitForClearScreen;
	wait(60);
	loop (5) {spawnEnemy02;}
	spawnEnemy50(width - 110);
	spawnEnemy50(110);
	wait(90);
	spawnEnemy50(width - 120);
	spawnEnemy50(120);
	wait(90);
	spawnEnemy50(width / 2);
	waitForClearScreen;
	wait(120);
	ascent (i in -2 .. 3) {
		spawnEnemy52(width / 2 + 60 * i);
		wait(15);
	}
	waitForClearScreen;
	wait(180);
	spawnEnemy53;
	spawnEnemy54;
	waitForClearScreen;
	wait(180);
	spawnEnemy50(width - 125);
	spawnEnemy50(125);
	loop (10) {
		spawnEnemy55(false);
		spawnEnemy55(true);
		wait(30);
	}
	waitForClearScreen;
	wait(90);
	spawnEnemy51(width / 2);
	spawnEnemy52(width / 2);
	waitForClearScreen;
	wait(90);
	spawnEnemy03(50);
	spawnEnemy03(width - 50);
	spawnEnemy56(120);
	spawnEnemy56(width - 120);
	wait(150);
	loop (6) {
		spawnEnemy56(rand(0, width));
		wait(120);
	}
	waitForClearScreen;
	spawnEnemy50(width - 80);
	spawnEnemy50(80);
	spawnEnemy56(120);
	spawnEnemy56(width - 120);
	wait(180);
	spawnEnemy50(width - 110);
	spawnEnemy50(110);
	wait(300);
	spawnEnemy50(width - 150);
	spawnEnemy50(150);
	spawnEnemy56(width / 2);
	waitForClearScreen;
	wait(60);
	spawnEnemy57(0, 120, 70, 150, -200, 200);
	spawnEnemy57(width, 120, width - 70, 150, width + 200, 200);
	spawnEnemy51(110);
	spawnEnemy51(width - 110);
	wait(120);
	spawnEnemy56(width / 2);
	waitForClearScreen;
	wait(120);
	loop (20) {
		spawnEnemy49(width, 120, 165);
		wait(15);
	}
	wait(90);
	loop (20) {
		spawnEnemy49(0, 120, 15);
		wait(15);
	}
	waitForClearScreen;
	loop (4) {
		spawnEnemy58(0, 80, width + 200, 150);
		wait(30);
	}
	loop (4) {
		spawnEnemy58(width, 120, -200, 190);
		wait(30);
	}
	waitForClearScreen;
	spawnEnemy59(width / 3);
	spawnEnemy59(2 * width / 3);
	wait(60);
	loop (4) {
		spawnEnemy58(0, 80, width + 200, 150);
		wait(30);
	}
	loop (4) {
		spawnEnemy58(width, 120, -200, 190);
		wait(30);
	}
	waitForClearScreen;
	wait(300);
	DeleteShotAll(TYPE_ALL, TYPE_ITEM);
	// The Boss
	TDialogue(dialogueData);
	TBossPre;
	wait(240);
	TDialogue(dialogueData2);
	TBossPost;
}

// 64, 0, 96, 32

task spawnEnemy48(x, y) {
	let enemy = enemyOf(x, 0, 5, 90,
		"./../resource/enemy.png", 0, 0, 16, 32,
		3000, 100, 100, 8, 8,
		[0, 0, 0, 3]);
	wait(y / 5);
	ObjMove_SetSpeed(enemy, 0);
	ascent (i in 0 .. 50) {
		if (Obj_IsDeleted(enemy)) {return;}
		let a = rand(0, 360);
		loop (30) {
			CreateShotOA1(enemy, 1.5, a, DS_BALL_SS_YELLOW, 0);
			a += 12;
		}
		wait(90);
	}
	ObjMove_SetAngle(enemy, 180 * randIntH(0, 2));
	ObjMove_SetSpeed(enemy, 5);
}

task spawnEnemy49(x, y, angle) {
	let enemy = enemyOf(x, y, 5, angle,
		"./../resource/enemy.png", 0, 0, 16, 32,
		100, 100, 100, 8, 8,
		[5, 3, 0, 0]);
	while (!Obj_IsDeleted(enemy)) {
		let a = GetAngleToPlayer(enemy);
		loop (4) {
			CreateShotOA1(enemy, 5, a, DS_BALL_S_BLUE, 0);
			a += 90;
		}
		wait(6);
	}
}

task spawnEnemy50(x) {
	let enemy = enemyOf(x, 0, 1, 90,
		"./../resource/enemy.png", 0, 0, 16, 32,
		500, 100, 100, 8, 8,
		[15, 5, 0, 0]);
	while (!Obj_IsDeleted(enemy)) {
		let a = 90;
		loop (30) {
			CreateShotOA1(enemy, 1.2, a, DS_RICE_S_BLUE, 0);
			a += 12;
		}
		wait(120);
	}
}

task spawnEnemy51(x) {
	let enemy = enemyOf(x, 0, 2, 90,
		"./../resource/enemy.png", 0, 0, 16, 32,
		400, 100, 100, 8, 8,
		[15, 5, 0, 0]);
	wait(45);
	ObjMove_SetSpeed(enemy, 0);
	while (!Obj_IsDeleted(enemy)) {
		let a = GetAngleToPlayer(enemy);
		ascent (i in -1 .. 2) {
			CreateShotOA1(enemy, 2.5, a + 30 * i, DS_BALL_L_GREEN, 0);
		}
		wait(45);
	}
}

// Danmakufu has way too many pitfalls.
task spawnEnemy02 {
	let numberOfBullets = max(1, getDifficulty);
	task shoot(enemy) {
		while (!Obj_IsDeleted(enemy) && ObjMove_GetY(enemy) < 100) {
			let angle = rand(0, 360);
			ascent (j in 0 .. max(1, numberOfBullets - 1)) {
				ascent (i in 0 .. numberOfBullets) {
					CreateShotOA1(enemy, 3 + 0.6 * i, angle + 5 * j, DS_BALL_S_GREEN, 0);
				}
			}
			wait(40);
		}
		if (!Obj_IsDeleted(enemy)) { // You always have to remember to pass the object as the first parameter
			ObjMove_SetAngle(enemy, 180 * truncate(rand(0, 2)));
			ObjMove_SetSpeed(enemy, 4); // As well as write Obj all the time.
			while (!Obj_IsDeleted(enemy)) {
				yield;
			}
		}
	}
	let enemy = enemyOf(rand(0, 384), 0, rand(0.5, 1.5), 90,
		"./../resource/enemy.png", 0, 0, 16, 32,
		50, 100, 100, 8, 8,
		[10, 0, 0, 0]);
	shoot(enemy);
}

task spawnEnemy52(x) {
	let enemy = enemyOf(x, 0, 2.2, 90,
		"./../resource/enemy.png", 0, 0, 16, 32,
		900, 100, 100, 8, 8,
		[25, 10, 0, 0]);
	wait(45);
	ObjMove_SetSpeed(enemy, 0);
	while (!Obj_IsDeleted(enemy)) {
		let a = GetAngleToPlayer(enemy);
		loop (5) {
			CreateShotOA1(enemy, rand(3, 4), a + rand(-1, 1), DS_BALL_S_RED, 0);
			a += 72;
		}
		wait(15);
	}
}

task spawnEnemy53 {
	let enemy = enemyOf(100, 10, 1.5, 90,
		"./../resource/enemy.png", 16, 0, 48, 48,
		4500, 100, 100, 10, 10,
		[60, 30, 2, 2]);
	wait(90);
	ObjMove_SetSpeed(enemy, 0);
	createHealthbar(enemy, 4500, 45, 50);
	loop {
		ObjMove_SetDestAtFrame(enemy, width - 100, 145, 120);
		loop (30) {
			if (Obj_IsDeleted(enemy)) {return;}
			CreateShotOA1(enemy, rand(1, 3), rand(0, 360), DS_ICE_GREEN, 0);
			wait(4);
		}
		if (Obj_IsDeleted(enemy)) {return;}
		let a = GetAngleToPlayer(enemy);
		loop (30) {
			CreateShotA2(ObjMove_GetX(enemy), ObjMove_GetY(enemy), 1, a, 0.02, 2.5, DS_BALL_M_GREEN, 0);
			a += 12;
		}
		ObjMove_SetDestAtFrame(enemy, 100, 145, 120);
		loop (30) {
			if (Obj_IsDeleted(enemy)) {return;}
			CreateShotOA1(enemy, rand(1, 3), rand(0, 360), DS_ICE_GREEN, 0);
			wait(4);
		}
		if (Obj_IsDeleted(enemy)) {return;}
		a = GetAngleToPlayer(enemy);
		loop (30) {
			CreateShotA2(ObjMove_GetX(enemy), ObjMove_GetY(enemy), 1, a, 0.02, 2.5, DS_BALL_M_GREEN, 0);
			a += 12;
		}
	}
}

task spawnEnemy54 {
	task trail(shot, angle) {
		while (!Obj_IsDeleted(shot)) {
			ObjShot_SetDeleteFrame(CreateShotOA1(shot, 0, angle, DS_ICE_GREEN, 0), 600);
			yield;
		}
	}
	task zigzag(shot, angle) {
		while (!Obj_IsDeleted(shot)) {
			ObjMove_SetAngle(shot, angle + 90);
			loop (60) {yield;}
			ObjMove_SetAngle(shot, angle);
			loop (60) {yield;}
		}
	}
	let enemy = enemyOf(width - 100, 10, 1.5, 90,
		"./../resource/enemy.png", 16, 48, 48, 96,
		4500, 100, 100, 10, 10,
		[60, 30, 2, 2]);
	task fork {
		while (!Obj_IsDeleted(enemy)) {
			let angle = rand(60, 120);
			trail(CreateShotOA1(enemy, 2.5, angle, DS_BUTTERFLY_GREEN, 0), angle);
			wait(90);
		}
	}
	wait(90);
	ObjMove_SetSpeed(enemy, 0);
	createHealthbar(enemy, 4500, 45, 50);
	fork;
	loop {
		ObjMove_SetDestAtFrame(enemy, 100, 145, 120);
		wait(120);
		if (Obj_IsDeleted(enemy)) {return;}
		let a = GetAngleToPlayer(enemy);
		loop (15) {
			let shot = CreateShotA2(ObjMove_GetX(enemy), ObjMove_GetY(enemy), 1, a, 0.02, 2.5, DS_BUTTERFLY_YELLOW, 0);
			zigzag(shot, a - 45);
			a += 24;
		}
		ObjMove_SetDestAtFrame(enemy, width - 100, 145, 120);
		wait(120);
		if (Obj_IsDeleted(enemy)) {return;}
		a = GetAngleToPlayer(enemy);
		loop (15) {
			let shot = CreateShotA2(ObjMove_GetX(enemy), ObjMove_GetY(enemy), 1, a, 0.02, 2.5, DS_BUTTERFLY_YELLOW, 0);
			zigzag(shot, a - 45);
			a += 24;
		}
	}
}

task spawnEnemy55(b) {
	let enemy = enemyOf(width * b, rand(100, 200), 2, b * 180,
		"./../resource/enemy.png", 0, 0, 16, 32,
		150, 100, 100, 8, 8,
		[5, 1, 0, 0]);
	while (!Obj_IsDeleted(enemy)) {
		let a = rand(0, 360);
		loop (5) {
			CreateShotOA1(enemy, rand(3, 4), a + rand(-1, 1), DS_BALL_S_GREEN, 0);
			a += 72;
		}
		wait(60);
	}
}

task spawnEnemy03(x) {
	let shots = 2 * getDifficulty + 4;
	let adiff = 360 / shots;
	task shoot(enemy) {
		ascent (j in 0 .. 10) {
			if (Obj_IsDeleted(enemy)) {return;}
			let a = rand(0, 360);
			ascent (i in 0 .. shots) {
				CreateShotOA1(enemy, 3, a + i * adiff, DS_STAR_M_GREEN, 30);
			}
			if (getDifficulty >= 2 && (j % 3) == 0) {
				let angle = GetAngleToPlayer(enemy);
				ascent (i in -4 .. 5) {
					CreateShotOA1(enemy, 3 - 0.25 * absolute(i), angle + i * 4, DS_SCALE_SKY, 30);
				}
			}
			wait(90);
		}
		wait(30);
		ObjMove_SetSpeed(enemy, 3); // in Java: enemy.setSpeed(3);
		homeToPlayer(enemy); // Yes, it was originally meant for shots, but...
		let counter = 0;
		while (!Obj_IsDeleted(enemy)) {
			CreateShotOA1(enemy, 3, GetAngleToPlayer(enemy) + rand(-2, 2), DS_STAR_S_RED, 30);
			counter++;
			if (counter >= 600) {
				CreateShotOA1(enemy, 4, rand(0, 360), DS_STAR_S_RED, 30);
			}
			yield;
		}
	}
	let enemy = enemyOf(x, 0, 0.25, 90,
		"./../resource/enemy.png", 0, 32, 16, 48,
		250, 100, 100, 7, 7,
		[10, 2, 0, truncate(rand(0, 2))]);
	shoot(enemy);
}

task spawnEnemy56(x) {
	let enemy = enemyOf(x, 0, 3, 90,
		"./../resource/enemy.png", 0, 0, 16, 32,
		600, 100, 100, 8, 8,
		[35, 10, 0, 0]);
	wait(30);
	ObjMove_SetSpeed(enemy, 0);
	ascent (i in 0 .. 180) {
		if (Obj_IsDeleted(enemy)) {return;}
		let j = min(i, 20) * 3;
		CreateShotOA1(enemy, 4, 90, DS_KUNAI_BLUE, 0);
		CreateShotOA1(enemy, 4, -90, DS_KUNAI_BLUE, 0);
		CreateShotOA1(enemy, 4, j, DS_KUNAI_BLUE, 0);
		CreateShotOA1(enemy, 4, 180 - j, DS_KUNAI_BLUE, 0);
		CreateShotOA1(enemy, 4, j - 30, DS_KUNAI_BLUE, 0);
		CreateShotOA1(enemy, 4, 210 - j, DS_KUNAI_BLUE, 0);
		CreateShotOA1(enemy, 4, j / 2 - 90, DS_KUNAI_BLUE, 0);
		CreateShotOA1(enemy, 4, 270 - j / 2, DS_KUNAI_BLUE, 0);
		wait(3);
	}
}

task spawnEnemy57(x1, y1, x2, y2, x3, y3) {
	let enemy = enemyOf(x1, y1, 0, 0,
		"./../resource/enemy.png", 0, 0, 16, 32,
		300, 100, 100, 8, 8,
		[35, 10, 0, 0]);
	ObjMove_SetDestAtFrame(enemy, x2, y2, 60);
	wait(60);
	loop (18) {
		if (Obj_IsDeleted(enemy)) {return;}
		CreateShotOA1(enemy, rand(2, 3), rand(60, 120), DS_ICE_GREEN, 0);
		wait(10);
	}
	ObjMove_SetDestAtFrame(enemy, x3, y3, 60);
}

task spawnEnemy58(x1, y1, x2, y2) {
	let enemy = enemyOf(x1, y1, 0, 0,
		"./../resource/enemy.png", 0, 0, 16, 32,
		300, 100, 100, 8, 8,
		[35, 10, 0, 0]);
	ObjMove_SetDestAtSpeed(enemy, x2, y2, 1.2);
	let x = 0;
	let y = 0;
	loop {
		if (Obj_IsDeleted(enemy)) {
			if (!canDeleteEnemy(enemy)) {
				loop (30) {
					CreateShotA2(x, y, rand(2, 3), rand(0, 360), -0.01, rand(1, 2), DS_BALL_SS_GREEN, 30);
				}
			}
			return;
		}
		x = ObjMove_GetX(enemy);
		y = ObjMove_GetY(enemy);
		let a = GetAngleToPlayer(enemy);
		ascent (i in -5 .. 6) {
			CreateShotA1(x + 2 * i * sin(a), y - 2 * i * cos(a), 4, a, DS_ICE_GREEN, 0);
		}
		wait(rand(40, 75));
	}
}

task spawnEnemy59(x) {
	let enemy = enemyOf(x, 0, 3, 90,
		"./../resource/enemy.png", 0, 0, 16, 32,
		600, 100, 100, 8, 8,
		[35, 10, 0, 0]);
	wait(30);
	ObjMove_SetSpeed(enemy, 0);
	ascent (i in 0 .. 20) {
		if (Obj_IsDeleted(enemy)) {return;}
		let a = GetAngleToPlayer(enemy);
		loop (8) {
			CreateShotOA1(enemy, 2.5, a, DS_BALL_M_BLUE, 0);
			a += 45;
		}
		ascent (i in 0 .. 7) {
			CreateShotOA1(enemy, 1 + 0.5 * i, a, DS_ICE_RED, 0);
		}
		wait(120);
	}
}