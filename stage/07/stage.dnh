#TouhouDanmakufu[Stage]
#ScriptVersion[3]
#Title["St7"]
#Text["Seventh (but not final) stage!"]
#Background["./stg_back.dnh"]
#Player["./../../player/player0.dnh", "./../../player/player2.dnh"]
#System["./../../system/system.dnh"]

#include "./../../prologue.dnh"
#include "./../../system/healthbar.dnh"
let stage = "07";
let done = false;
let dialogueData;
let dialogueData2;
let bgm = 13;
#include "./../stage_header.dnh"

// 0, 48, 16, 72

let width = GetStgFrameWidth;
let height = GetStgFrameHeight;

task TStage {
	if (getCharacter < 2) {
		dialogueData = readDD("d7_1");
		dialogueData2 = readDD("d7_2");
	}
	else {
		dialogueData = readDD("d7_3");
		dialogueData2 = readDD("d7_4");
	}
	spawnEnemy27(50, 30, 3);
	spawnEnemy27(width - 50, 30, 3);
	wait(240);
	showStageTitle([192, 255, 128]);
	spawnEnemy27(60, 40, 3);
	spawnEnemy27(width - 60, 40, 3);
	wait(30);
	spawnEnemy27(40, 30, 6);
	spawnEnemy27(width - 40, 30, 6);
	waitForClearScreen;
	wait(120);
	spawnEnemy27(50, 30, 3);
	spawnEnemy27(width - 50, 30, 3);
	spawnEnemy28(width / 2, -10, width / 2, 110);
	wait(240);
	spawnEnemy28(10, -10, 50, 90);
	spawnEnemy28(width - 10, -10, width - 50, 90);
	waitForClearScreen;
	wait(120);
	ascent (i in 0 .. 5) {
		spawnEnemy29(-10, 50, 60 + 20 * i, 40);
		spawnEnemy29(width + 10, 50, width - 60 - 20 * i, 40);
		wait(60);
	}
	waitForClearScreen;
	wait(120);
	loop (50 + 10 * getDifficulty) {spawnEnemy30;}
	wait(120);
	spawnEnemy31(120, 80, 10, true);
	spawnEnemy31(width - 120, 80, -10, true);
	waitForClearScreen;
	let fe = 6 + 2 * getDifficulty;
	ascent (i in 0 .. fe) {
		let a = 90 + 360 * i / fe;
		spawnEnemy31(width / 2 + 100 * cos(a), 120 + 100 * sin(a), [1, -1][i % 2], false);
	}
	advanceBGIndex;
	waitForClearScreen;
	wait(300);
	DeleteShotAll(TYPE_ALL, TYPE_ITEM);
	// The Boss
	TDialogue(dialogueData);
	TBossPre;
	TDialogue(dialogueData2);
	TBossPost;
}

task spawnEnemy27(x, t, v) {
	let enemy = enemyOf(x, 0, v, 90,
		"./../resource/enemy.png", 0, 48, 16, 72,
		400, 100, 0, 8, 8,
		[20, 20, truncate(rand(0, 1) + 0.1), 0, 0, 0, 10]);
	wait(t);
	ObjMove_SetSpeed(enemy, 0);
	let d = getDifficulty;
	let density = 8 + 2 * d;
	let period = 90 - 9 * d;
	let speed = 1 + 0.25 * d;
	ascent (i in 0 .. 600) {
		if (Obj_IsDeleted(enemy)) {return;}
		if (i % period == 0) {
			let a = GetAngleToPlayer(enemy) + rand(-5, 5);
			loop (density) {
				CreateShotA2(ObjMove_GetX(enemy), ObjMove_GetY(enemy),
					3 * speed, a, -0.025 * speed, speed, DS_ICE_GREEN, 0);
				a += 360 / density;
			}
		}
		yield;
	}
	ObjMove_SetAngle(enemy, 180 * truncate(rand(0, 2)));
	ObjMove_SetSpeed(enemy, v);
}

task spawnEnemy28(x1, y1, x2, y2) {
	let enemy = enemyOf(x1, y1, 0, 0,
		"./../resource/enemy.png", 0, 48, 16, 72,
		600, 100, 0, 8, 8,
		[20, 20, truncate(rand(0, 1) + 0.1), 0, 0, 0, 10]);
	ObjMove_SetDestAtFrame(enemy, x2, y2, 60);
	wait(60);
	let d = getDifficulty;
	let density = 20 + 5 * d;
	let speed = 1.5 + 0.25 * d;
	let spread = 1.5 * d;
	let x = 0;
	while (!Obj_IsDeleted(enemy) && x < 10) {
		let a = rand(0, 360);
		loop (density) {
			ascent (i in 0 .. 3) {
				let s = CreateShotOA1(enemy, speed * (1 + 0.2 * i), a, DS_KUNAI_GREEN, 0);
				ObjMove_AddPatternA4(s, 45, NO_CHANGE, rand(-spread, spread), 0, 0, speed,
					GetPlayerObjectID, DS_KUNAI_RED);
			}
			a += 360 / density;
		}
		x++;
		wait(120);
	}
	ObjMove_SetSpeed(enemy, 5);
	ObjMove_SetAngle(enemy, rand(80, 100));
	while (!Obj_IsDeleted(enemy)) {
		if (rand(0, 10) < d) {
			CreateShotOA1(enemy, rand(0.3, 0.7), GetAngleToPlayer(enemy) + rand(-25, 25), DS_BALL_SS_RED, 0);
		}
		yield;
	}
}

task spawnEnemy29(x1, y1, x2, y2) {
	let enemy = enemyOf(x1, y1, 0, 0,
		"./../resource/enemy.png", 0, 48, 16, 72,
		400, 100, 0, 8, 8,
		[20, 20, truncate(rand(0, 1) + 0.1), 0, 0, 0, 10]);
		ObjMove_SetDestAtFrame(enemy, x2, y2, 60);
	wait(60);
	let d = getDifficulty;
	let rows = 1 + truncate(d / 3);
	let spread = 1 + truncate(d / 2);
	let speed = 2 + 0.2 * d;
	ObjMove_SetAngle(enemy, 90);
	while (!Obj_IsDeleted(enemy)) {
		let a = GetAngleToPlayer(enemy);
		let s = randomSign;
		ascent (i in -spread .. spread + 1) {
			if (Obj_IsDeleted(enemy)) {return;}
			ascent (j in 0 .. rows) {
				CreateShotOA1(enemy, speed * (1 + 0.2 * j), a + 10 * s * i, DS_BALL_S_GREEN, 0);
			}
			wait(45 / (2 * spread + 1));
		}
		ObjMove_SetSpeed(enemy, 1.2);
		wait(30);
		ObjMove_SetSpeed(enemy, 0);
		wait(90);
	}
}

task spawnEnemy30 {
	let enemy = enemyOf(rand(0, GetStgFrameWidth), 0, rand(0.3, 0.7), 90,
		"./../resource/enemy.png", 0, 48, 16, 72,
		100, 100, 0, 8, 8,
		[2, 0, 0, 0, 0, 0, 5]);
	let d = getDifficulty;
	while (!Obj_IsDeleted(enemy)) {
		if (rand(0, 200) < d) {
			CreateShotOA1(enemy, 2 + 0.2 * d, rand(0, 360), DS_BALL_S_GREEN, 0);
		}
		yield;
	}
}

task spawnEnemy31(x, y, e, b) {
	let enemy = enemyOf(x, 0, y / 90, 90,
		"./../resource/enemy.png", 0, 48, 16, 72,
		1000, 100, 0, 8, 8,
		[30, 10, truncate(rand(0, 1) + 0.1), 0, 0, 0, 40]);
	wait(90);
	ObjMove_SetSpeed(enemy, 0);
	let d = getDifficulty;
	let angle = rand(0, 360);
	let period = 30 / (1 + 0.5 * d);
	let c = truncate(rand(0, 8));
	let s = 1.7 + 0.3 * d;
	let star = [DS_STAR_S_RED, DS_STAR_M_RED][b && d >= 2];
	while (!Obj_IsDeleted(enemy)) {
		CreateShotOA1(enemy, s, angle, star + c, 0);
		angle += e;
		c++;
		if (c >= 8) {c = 0;}
		wait(period);
	}
}