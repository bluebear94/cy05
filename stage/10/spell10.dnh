#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["St1 Sp3"]
#Text["Third spell!"]
#Player["./../../player/player0.dnh"]
#System["./../../system/system.dnh"]
#include "./../../prologue.dnh"
#include "./../../player/shotc.dnh"
let id = 55;
let level = 10;
#include "./../spell_header.dnh"
#include "./render_boss.dnh"
#include "./bossfunc.dnh"

let height = GetStgFrameHeight;
let width = GetStgFrameWidth;

@Event {
	alternative (GetEventType)
	case (EV_REQUEST_LIFE) {
		SetScriptResult(30000);
	}
	case (EV_REQUEST_TIMER) {
		SetScriptResult(200);
	}
	case (EV_REQUEST_SPELL_SCORE) {
		SetScriptResult(spellBonus);
	}
}

@Finalize {}

function hp {return min(ObjEnemy_GetInfo(objBoss, INFO_LIFE), ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID, INFO_TIMERF) * 2.5);}

task TWork {
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty;
	part1;
	let ways = 20 + 4 * d;
	let speed = 1 + 0.1 * d;
	let period = 50 / (1 + 0.15 * d);
	while (!isDead) {
		let a = rand(0, 360);
		loop (ways) {
			CreateShotOA1(objBoss, speed, a, DS_ICE_SKY, 0);
			a += 360 / ways;
		}
		wait(period);
	}
}

task part1 {
	while (hp > 25000) {yield;}
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty;
	part2;
	let p = 0.01 + 0.005 * d;
	while (!isDead) {
		let pp = p + 0.01 * (1 - hp / 30000);
		if (rand(0, 1) < pp) {
			CreateShotA1(rand(0, width), 0, rand(1, 3), 90, DS_ICE_WHITE, 30);
		}
		if (rand(0, 1) < pp) {
			CreateShotA1(rand(0, width), height, rand(1, 2), -90, DS_ICE_WHITE, 60);
		}
		yield;
	}
}

task part2 {
	while (hp > 20000) {yield;}
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty;
	part3;
	let ways = 40 + 8 * d;
	let speed = 3 + 0.3 * d;
	let period = 400 / (1 + 0.15 * d);
	while (!isDead) {
		let a = rand(0, 360);
		loop (ways) {
			let shot = CreateShotOA1(objBoss, speed, a, DS_ICE_BLUE, 0);
			ObjMove_AddPatternA4(shot, 50, speed, 0, 0, 0, speed, GetPlayerObjectID, DS_ICE_GREEN);
			a += 360 / ways;
		}
		wait(period);
	}
}

task part3 {
	while (hp > 15000) {yield;}
	let d = getDifficulty;
	part4;
	let r0 = 150 - 5 * d;
	let u = 0;
	while (!isDead) {
		let t = ObjEnemyBossScene_GetInfo(GetEnemyBossSceneObjectID, INFO_TIMERF); // 0 - 7200.
		let x = GetPlayerX;
		let y = GetPlayerY;
		let r = r0 * (0.28 + hp / 15000);
		let a = 12 * sin(u);
		loop (30) {
			CreateShotA1(x + r * cos(a), y + r * sin(a), 1.2, a, DS_LIGHT_BLUE, 30 * (d >= 4));
			a += 12;
		}
		u += 47;
		wait(20);
	}
}

let reverse = false;

task spiral(x, y) {
	let a = getAngleToXY(GetPlayerObjectID, x, y) + 180;
	let d = getDifficulty - 1;
	let interval = 29 - 2.9 * d;
	let s = randomSign;
	let speed = 1.2 + 0.03 * d;
	while (!isDead) {
		CreateShotA1(x, y, speed, a, DS_RICE_S_GREEN, 30);
		CreateShotA1(x, y, speed, 0.5 * a, DS_RICE_S_GREEN, 30);
		if (reverse) {
			if (d >= 2) {CreateStraightLaserA1(x, y, getAngleToXY(GetPlayerObjectID, x, y) + 180, 600, 24, 30, DS_BEAM_SKY, 90);}
			s = randomSign;
		}
		a += interval * s;
		wait(interval / 2);
	}
}

task spiral2(x, y) {
	spiral(x, y);
	spiral(GetStgFrameWidth - x, y);
}

task part4 {
	while (hp > 10000) {yield;}
	let height = GetStgFrameHeight;
	let width = GetStgFrameWidth;
	let cx = width / 2;
	let cy = height / 2;
	let d = getDifficulty;
	part5;
	let interval = 29 - 2.9 * d;
	spiral2(100, 50);
	spiral2(50, 150);
	spiral2(100, 200);
	spiral(cx, 250);
	spiral(cx, 75);
	while (!isDead) {
		reverse = true;
		wait(interval / 2);
		reverse = false;
		wait(180);
	}
}

task part5 {
	while (hp > 5000) {yield;}
	let d = getDifficulty;
	let angleDensity = 12 + 2 * d;
	let ad = 24 + 4 * d;
	let deviation = 30 + 5 * d;
	let ways = 3 + d;
	task bulletTask(shot) {
		wait(100);
		if (!Obj_IsDeleted(shot)) {
			let a = 90;
			loop (ways) {
				CreateShotOA1(shot, 0.5, a, DS_BALL_SS_BLUE, 0);
				a += 360 / ways;
			}
			Obj_Delete(shot);
		}
	}
	while (!isDead) {
		let a = rand(0, 360);
		let b = 0;
		loop (ad) {
			let r = astroid(b, 4);
			let shot = CreateShotOA1(objBoss, 3 * r, a + b, DS_BALL_S_SKY, 0);
			bulletTask(shot);
			shot = CreateShotOA1(objBoss, 1.5 * r, a + b + 45, DS_BALL_S_SKY, 0);
			bulletTask(shot);
			b += 360 / ad;
		}
		wait(140);
	}
}