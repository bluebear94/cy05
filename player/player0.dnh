#TouhouDanmakufu[Player]
#ScriptVersion[3]
#ID["Rencron0"]
#Title["Elssecisso Rencron 0"]
//#Image["./ExRumiaImage.png"]
#include"./shotc.dnh"
#include"../prologue.dnh"
#include"../system/system_mech.dnh"


let objPlayer = GetPlayerObjectID();
let objSlowShot = ID_INVALID;
let current = GetCurrentScriptDirectory();

@Initialize {
	SetPlayerSpeed(7, 1.5);
	ObjPlayer_AddIntersectionCircleA1(objPlayer, 0, 0, 1.5, 20); //Sets the hitbox of the player
	let path = current ~ "playersd.dnh";
	LoadPlayerShotData(path); //Loads the player bullet graphics
	// The Player key stores the player.
	SetCommonData("Player", 0);
	TImage();//Runs the player graphic task
	TShot();//Runs the shooting task
	hitbox();
	TMagicCircle();//Runs the invincibility time magic circle task
}

@MainLoop {
	yield;
}

@Finalize {
}

task TImage {
	let path = GetCurrentScriptDirectory ~ "../resource/playershots.png";
	ObjPrim_SetTexture(objPlayer, path);
	ObjSprite2D_SetSourceRect(objPlayer, 0, 464, 21, 495);
	loop {
		ObjSprite2D_SetDestCenter(objPlayer);
		yield;
	}
}

task TShot {
	let tick = 0;
	loop {
		let x = GetPlayerX;
		let y = GetPlayerY - 4;
		let shot = GetVirtualKeyState(VK_SHOT);
		if (shot == KEY_PUSH || shot == KEY_HOLD && tick == 0 &&
			GetPlayerState == STATE_NORMAL && IsPermitPlayerShot) {
			if (isFocused) {
				CreatePlayerShotA1(x - 5, y, 10, 270, 15, 1, SPIKED_SEED);
				CreatePlayerShotA1(x + 5, y, 10, 270, 15, 1, SPIKED_SEED);
				CreatePlayerShotA1(x - 2.5, y, 10, 235, 7, 1, SPIKED_SEED);
				CreatePlayerShotA1(x + 2.5, y, 10, 315, 7, 1, SPIKED_SEED);
				CreatePlayerShotA1(x - 2.5, y + 8, 10, 90, 5, 1, SPIKED_SEED);
				CreatePlayerShotA1(x + 2.5, y + 8, 10, 90, 5, 1, SPIKED_SEED);
			}
			else {
				home(CreatePlayerShotA1(x, y, 10, 270, 10, 1, SILVER_ARROW));
				CreatePlayerShotA1(x - 5, y - 3, 10, 270, 10, 1, SILVER_ARROW);
				CreatePlayerShotA1(x + 5, y - 3, 10, 270, 10, 1, SILVER_ARROW);
				CreatePlayerShotA1(x - 10, y - 3, 10, 270, 8, 1, SILVER_ARROW);
				CreatePlayerShotA1(x + 10, y - 3, 10, 270, 8, 1, SILVER_ARROW);
			}
		}
		tick++;
		if (tick == 3) {tick = 0;}
		yield;
	}
}

task TSpell {
	let objManage = GetSpellManageObject();
	SetPlayerInvincibilityFrame(390);
	shake(300);
	let width = GetStgFrameWidth;
	let height = GetStgFrameHeight;
	loop (300) {
		ascent (j in 0 .. 5) {
			ObjShot_SetSpellFactor(CreatePlayerShotA1(rand(0, width), height - 10,
				rand(15, 25), rand(260, 280), 0.5, 1, LEAF), true);
		}
		let enemies = GetAllEnemyID;
		let len = length(enemies);
		let bosses = GetEnemyBossObjectID;
		let boss = ID_INVALID;
		if (length(bosses) != 0) {boss = bosses[0];}
		ascent (j in 0 .. len) {
			let enemy = enemies[j];
			if (enemy != boss) {
				ObjMove_SetY(enemy, max(0, ObjMove_GetY(enemy) - 0.5));
			}
		}
		let shots = GetShotIdInCircleA2(0, 0, 1000, TARGET_ENEMY);
		let sl = length(shots);
		ascent (j in 0 .. sl) {
			let s = shots[j];
			if (!ObjShot_IsSpellResist(s)) {
				ObjShot_ToItem(s);
			}
		}
		yield;
	}
	Obj_Delete(objManage);
}

#include "./player_event.dnh"