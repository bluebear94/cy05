let iR = 115;
let oR = 120;

// TODO: magic circle effect
task TMagicCircle {
	let circle = ObjPrim_Create(OBJ_PRIMITIVE_2D);
	ObjPrim_SetPrimitiveType(circle, PRIMITIVE_TRIANGLESTRIP);
	ObjPrim_SetVertexCount(circle, 10);
	//Obj_SetRenderPriority(circle, 0.3);
	ascent (i in 0 .. 5) {
		ObjPrim_SetVertexColor(circle, i * 2, 240, 255, 255);
		ObjPrim_SetVertexColor(circle, i * 2 + 1, 240, 255, 240);
		ObjPrim_SetVertexAlpha(circle, i * 2, 140);
		ObjPrim_SetVertexAlpha(circle, i * 2 + 1, 90);
	}
	let coR = oR;
	let ciR = iR;
	function rotate(theta, bx, by) {
		ascent (i in 0 .. 5) {
			let c = cos(theta);
			let s = sin(theta);
			ObjPrim_SetVertexPosition(circle, i * 2, bx + coR * c, by + coR * s, 0);
			ObjPrim_SetVertexPosition(circle, i * 2 + 1, bx + ciR * c, by + ciR * s, 0);
			theta += 90;
		}
	}
	let angle = 0;
	let MAX_FRAMES = 400;
	loop {
		let i = GetPlayerInvincibilityFrame;
		coR = oR * (i / MAX_FRAMES) ^ 0.5;
		ciR = iR * (i / MAX_FRAMES) ^ 0.5;
		rotate(angle, GetPlayerX, GetPlayerY);
		angle++;
		yield;
	}
}